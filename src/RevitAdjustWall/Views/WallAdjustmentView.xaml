<Window
    x:Class="RevitAdjustWall.Views.WallAdjustmentView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:RevitAdjustWall.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="Revit Adjust Wall"
    Width="400"
    Background="#F5F5F5"
    ResizeMode="NoResize"
    SizeToContent="Height"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">

    <Window.Resources>
        <!--  Converters  -->
        <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <!--  Styles for consistent UI appearance  -->
        <Style
            x:Key="HeaderTextStyle"
            TargetType="TextBlock">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="#2C3E50" />
            <Setter Property="Margin" Value="0,0,0,10" />
        </Style>

        <Style
            x:Key="LabelTextStyle"
            TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Foreground" Value="#34495E" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,5,0" />
        </Style>

        <Style
            x:Key="ButtonStyle"
            TargetType="Button">
            <Setter Property="Height" Value="35" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Background" Value="#3498DB" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2980B9" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#BDC3C7" />
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="TextBoxStyle"
            TargetType="TextBox">
            <Setter Property="Height" Value="30" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="BorderBrush" Value="#BDC3C7" />
            <Setter Property="BorderThickness" Value="1" />
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#3498DB" />
                </Trigger>
                <DataTrigger
                    Binding="{Binding IsValidGapDistance}"
                    Value="False">
                    <Setter Property="BorderBrush" Value="#E74C3C" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="StatusTextStyle"
            TargetType="TextBlock">
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Foreground" Value="#7F8C8D" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--  Header  -->
        <TextBlock
            Grid.Row="0"
            HorizontalAlignment="Center"
            Style="{StaticResource HeaderTextStyle}"
            Text="Wall Adjustment Tool" />

        <!--  Gap Distance Input  -->
        <GroupBox
            Grid.Row="1"
            Margin="0,10,0,15"
            Padding="10"
            Header="Gap Distance">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Column="0"
                    Style="{StaticResource LabelTextStyle}"
                    Text="Gap:" />

                <TextBox
                    Grid.Column="1"
                    Margin="5,0"
                    PreviewKeyDown="NumericTextBox_PreviewKeyDown"
                    PreviewTextInput="NumericTextBox_PreviewTextInput"
                    Style="{StaticResource TextBoxStyle}"
                    Text="{Binding GapDistanceText, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock
                    Grid.Column="2"
                    Style="{StaticResource LabelTextStyle}"
                    Text="mm" />
            </Grid>
        </GroupBox>

        <!--  Wall Selection Buttons  -->
        <GroupBox
            Grid.Row="2"
            Margin="0,0,0,15"
            Padding="10"
            Header="Wall Selection">
            <StackPanel>
                <Button
                    Command="{Binding PickWallCommand}"
                    Content="Pick Wall"
                    IsEnabled="{Binding CanExecuteCommands}"
                    Style="{StaticResource ButtonStyle}" />

                <Button
                    Command="{Binding ActiveViewCommand}"
                    Content="Active View"
                    IsEnabled="{Binding CanExecuteCommands}"
                    Style="{StaticResource ButtonStyle}" />
            </StackPanel>
        </GroupBox>

        <!--  Adjust Button  -->
        <GroupBox
            Grid.Row="3"
            Margin="0,0,0,15"
            Padding="10"
            Header="Adjustment">
            <Button
                Command="{Binding AdjustWallsCommand}"
                Content="Adjust Walls"
                IsEnabled="{Binding CanAdjustWalls}">
                <Button.Style>
                    <Style
                        BasedOn="{StaticResource ButtonStyle}"
                        TargetType="Button">
                        <Setter Property="Background" Value="#27AE60" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#229954" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#BDC3C7" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </GroupBox>

        <!--  Selected Walls Info  -->
        <GroupBox
            Grid.Row="4"
            Margin="0,0,0,15"
            Padding="10"
            Header="Selected Walls">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ListBox
                    Background="Transparent"
                    BorderThickness="0"
                    ItemsSource="{Binding SelectedWallsInfo}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="0,2"
                                Style="{StaticResource StatusTextStyle}"
                                Text="{Binding}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </ScrollViewer>
        </GroupBox>

        <!--  Status Bar  -->
        <Border
            Grid.Row="5"
            Padding="10,5"
            Background="#ECF0F1"
            BorderBrush="#BDC3C7"
            BorderThickness="0,1,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <ProgressBar
                    Grid.Column="0"
                    Width="20"
                    Height="20"
                    Margin="0,0,10,0"
                    IsIndeterminate="True"
                    Visibility="{Binding IsProcessing, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <TextBlock
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Style="{StaticResource StatusTextStyle}"
                    Text="{Binding StatusMessage}" />
            </Grid>
        </Border>

        <!--  Validation Message  -->
        <TextBlock
            Grid.Row="6"
            Margin="0,5,0,0"
            FontSize="10"
            Foreground="#E74C3C"
            Text="{Binding ValidationMessage}"
            Visibility="{Binding ValidationMessage, Converter={StaticResource StringToVisibilityConverter}}" />
    </Grid>
</Window>
