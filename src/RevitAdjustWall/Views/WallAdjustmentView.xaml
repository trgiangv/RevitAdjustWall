<Window x:Class="RevitAdjustWall.Views.WallAdjustmentView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:RevitAdjustWall.Converters"
        mc:Ignorable="d"
        Title="Revit Adjust Wall" 
        Height="500" 
        Width="400"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        Background="#F5F5F5">

    <Window.Resources>
        <!-- Converters -->
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Styles for consistent UI appearance -->
        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#2C3E50"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
        </Style>

        <Style x:Key="LabelTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="#34495E"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
        </Style>

        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="35"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="#3498DB"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2980B9"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#BDC3C7"/>
                    <Setter Property="Cursor" Value="Arrow"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="BorderBrush" Value="#BDC3C7"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#3498DB"/>
                </Trigger>
                <DataTrigger Binding="{Binding IsValidGapDistance}" Value="False">
                    <Setter Property="BorderBrush" Value="#E74C3C"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="StatusTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Foreground" Value="#7F8C8D"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <TextBlock Grid.Row="0" 
                   Text="Wall Adjustment Tool" 
                   Style="{StaticResource HeaderTextStyle}"
                   HorizontalAlignment="Center"/>

        <!-- Gap Distance Input -->
        <GroupBox Grid.Row="1" Header="Gap Distance" Margin="0,10,0,15" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" 
                           Text="Gap:" 
                           Style="{StaticResource LabelTextStyle}"/>

                <TextBox Grid.Column="1"
                         Text="{Binding GapDistanceText, UpdateSourceTrigger=PropertyChanged}"
                         Style="{StaticResource TextBoxStyle}"
                         Margin="5,0"
                         PreviewTextInput="NumericTextBox_PreviewTextInput"
                         PreviewKeyDown="NumericTextBox_PreviewKeyDown"/>

                <TextBlock Grid.Column="2" 
                           Text="mm" 
                           Style="{StaticResource LabelTextStyle}"/>
            </Grid>
        </GroupBox>

        <!-- Wall Selection Buttons -->
        <GroupBox Grid.Row="2" Header="Wall Selection" Margin="0,0,0,15" Padding="10">
            <StackPanel>
                <Button Content="Pick Wall" 
                        Command="{Binding PickWallCommand}"
                        Style="{StaticResource ButtonStyle}"
                        IsEnabled="{Binding CanExecuteCommands}"/>

                <Button Content="Active View" 
                        Command="{Binding ActiveViewCommand}"
                        Style="{StaticResource ButtonStyle}"
                        IsEnabled="{Binding CanExecuteCommands}"/>
            </StackPanel>
        </GroupBox>

        <!-- Adjust Button -->
        <GroupBox Grid.Row="3" Header="Adjustment" Margin="0,0,0,15" Padding="10">
            <Button Content="Adjust Walls"
                    Command="{Binding AdjustWallsCommand}"
                    IsEnabled="{Binding CanAdjustWalls}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
                        <Setter Property="Background" Value="#27AE60"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#229954"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#BDC3C7"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </GroupBox>

        <!-- Selected Walls Info -->
        <GroupBox Grid.Row="4" Header="Selected Walls" Margin="0,0,0,15" Padding="10">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ListBox ItemsSource="{Binding SelectedWallsInfo}"
                         Background="Transparent"
                         BorderThickness="0">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" 
                                       Style="{StaticResource StatusTextStyle}"
                                       Margin="0,2"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </ScrollViewer>
        </GroupBox>

        <!-- Status Bar -->
        <Border Grid.Row="5" 
                Background="#ECF0F1" 
                BorderBrush="#BDC3C7" 
                BorderThickness="0,1,0,0" 
                Padding="10,5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <ProgressBar Grid.Column="0" 
                             Width="20" 
                             Height="20" 
                             IsIndeterminate="True"
                             Visibility="{Binding IsProcessing, Converter={StaticResource BooleanToVisibilityConverter}}"
                             Margin="0,0,10,0"/>

                <TextBlock Grid.Column="1" 
                           Text="{Binding StatusMessage}" 
                           Style="{StaticResource StatusTextStyle}"
                           VerticalAlignment="Center"/>
            </Grid>
        </Border>

        <!-- Validation Message -->
        <TextBlock Grid.Row="6"
                   Text="{Binding ValidationMessage}"
                   Foreground="#E74C3C"
                   FontSize="10"
                   Margin="0,5,0,0"
                   Visibility="{Binding ValidationMessage, Converter={StaticResource StringToVisibilityConverter}}"/>
    </Grid>
</Window>
