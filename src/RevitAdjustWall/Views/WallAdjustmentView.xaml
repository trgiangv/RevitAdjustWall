<Window
    x:Class="RevitAdjustWall.Views.WallAdjustmentView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:RevitAdjustWall.ViewModels"
    Title="Revit Adjust Wall"
    Width="400"
    d:DataContext="{d:DesignInstance viewModels:WallAdjustmentViewModel}"
    Background="#F5F5F5"
    ResizeMode="NoResize"
    SizeToContent="Height"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">

    <Window.Resources>
        <Style
            x:Key="LabelTextStyle"
            TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Foreground" Value="#34495E" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,5,0" />
        </Style>

        <Style
            x:Key="ButtonStyle"
            TargetType="Button">
            <Setter Property="Height" Value="35" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Background" Value="#3498DB" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2980B9" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#BDC3C7" />
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="TextBoxStyle"
            TargetType="TextBox">
            <Setter Property="Height" Value="30" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="BorderBrush" Value="#BDC3C7" />
            <Setter Property="BorderThickness" Value="1" />
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#3498DB" />
                </Trigger>
                <DataTrigger
                    Binding="{Binding IsValidGapDistance}"
                    Value="False">
                    <Setter Property="BorderBrush" Value="#E74C3C" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid
            Grid.Row="2"
            Margin="0,0,0,15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock
                Grid.Column="0"
                Style="{StaticResource LabelTextStyle}"
                Text="Gap:" />

            <TextBox
                Grid.Column="1"
                Margin="5,0"
                PreviewKeyDown="NumericTextBox_PreviewKeyDown"
                PreviewTextInput="NumericTextBox_PreviewTextInput"
                Style="{StaticResource TextBoxStyle}"
                Text="{Binding GapDistanceText, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock
                Grid.Column="2"
                Style="{StaticResource LabelTextStyle}"
                Text="mm" />
        </Grid>

        <Button
            Grid.Row="3"
            Command="{Binding PickWallsCommand}"
            Content="Select Walls"
            Style="{StaticResource ButtonStyle}" />
    </Grid>
</Window>
